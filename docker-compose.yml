version: "3.7"
services:

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - app-tier
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: localhost
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - app-tier
    depends_on:
      - zookeeper

  database:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: pizza_online
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5416:5432
    networks:
      - app-tier

  authorization:
    image: jboss/keycloak:latest
    container_name: keycloak
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      DB_VENDOR: "POSTGRES"
      DB_ADDR: postgres
      DB_DATABASE: pizza_online
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
    restart: always
    networks:
      - app-tier


#  Passing Spring Profile in DockerCompose
#  rest-api:
#    image: rest-api:0.0.1
#    ports:
#      - "8080:8080"
#    environment:
#      - "SPRING_PROFILES_ACTIVE=docker"

networks:
  app-tier:
    driver: bridge
