
//TODO
#server:
#  port: 8093
#
#spring:
#  profiles:
#    active: @activatedProperties@
#  jpa:
#    hibernate:
#      ddl-auto: none
#    properties:
#      hibernate:
#        format_sql: true
#  jackson:
#    serialization:
#      fail-on-empty-beans: false
#  kafka:
#    bootstrap-servers: localhost:29092
#    producer:
#      client-id: producer
#      retries: 3
#      acks: 1
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        max:
#          request:
#            size: 1073741824
#    consumer:
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: "*"
#      group-id: ${my.group.id:default}
#    listener:
#      missing-topics-fatal: false
#
#
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8661/eureka
#
#keycloak:
#  realm: Pizza-Online-Realm
#  resource: pizza-online-backend-product-service
#  auth-server-url: http://localhost:8080/auth
#  ssl-required: external
#
#my:
#  group:
#    id: pizza-online
#
#product:
#  replies: pizza-online.product.replies
#
#product-cost:
#  get: pizza-online.product-cost.get
##product-cost:
##  get:
##    all:
##      by:
##        ids: pizza-online.product-cost.get.all.by.ids
#
#
#
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBiner: TRACE

