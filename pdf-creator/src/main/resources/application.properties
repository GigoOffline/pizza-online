server.port=8097
spring.application.name=pdf-creator-service

#eureka client props
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8661/eureka

#actuator props
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=

management.endpoints.jmx.exposure.include=*
management.endpoints.jmx.exposure.exclude=

#health endpoint
management.endpoint.health.show-details=always

#kafka bootstrap server
spring.kafka.bootstrap-servers=localhost:29092

#kafka producer
spring.kafka.producer.client-id=producer
spring.kafka.producer.retries=3
spring.kafka.producer.acks=1
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.max.request.size=1073741824

#kafka consumer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.LongDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.group-id=${my.group.id:default}

#default group id
my.group.id=pizza-online

#replies topic
pdf.replies=pizza-online.pdf.replies

#pdf print
pdf.print=pizza-online.pdf.print

#order-product
order-product.all=pizza-online.order-product.all

#person
person.invoiceAddress=pizza-online.person.invoiceAddress

#product
product-cost.get=pizza-online.product-cost.get
product-cost.get.product=pizza-online.product-cost.get.product